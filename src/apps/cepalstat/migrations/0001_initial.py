# Generated by Django 3.2 on 2022-11-29 00:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tn_ancestors_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks')),
                ('tn_ancestors_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count')),
                ('tn_children_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Children pks')),
                ('tn_children_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count')),
                ('tn_depth', models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth')),
                ('tn_descendants_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks')),
                ('tn_descendants_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count')),
                ('tn_index', models.PositiveIntegerField(default=0, editable=False, verbose_name='Index')),
                ('tn_level', models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level')),
                ('tn_priority', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority')),
                ('tn_order', models.PositiveIntegerField(default=0, editable=False, verbose_name='Order')),
                ('tn_siblings_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks')),
                ('tn_siblings_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count')),
                ('descripcion', models.TextField()),
                ('descripcion_larga', models.TextField(blank=True, null=True)),
                ('descripcion_ingles', models.TextField(blank=True, null=True)),
                ('descripcion_larga_ingles', models.TextField(blank=True, null=True)),
                ('descripcion_frances', models.TextField(blank=True, null=True)),
                ('descripcion_larga_frances', models.TextField(blank=True, null=True)),
                ('descripcion_portugues', models.TextField(blank=True, null=True)),
                ('descripcion_larga_portugues', models.TextField(blank=True, null=True)),
                ('visible', models.BooleanField(default=False)),
                ('tn_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='cepalstat.area', verbose_name='Parent')),
            ],
            options={
                'ordering': ['tn_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tn_ancestors_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks')),
                ('tn_ancestors_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Ancestors count')),
                ('tn_children_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Children pks')),
                ('tn_children_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Children count')),
                ('tn_depth', models.PositiveIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth')),
                ('tn_descendants_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks')),
                ('tn_descendants_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Descendants count')),
                ('tn_index', models.PositiveIntegerField(default=0, editable=False, verbose_name='Index')),
                ('tn_level', models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level')),
                ('tn_priority', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority')),
                ('tn_order', models.PositiveIntegerField(default=0, editable=False, verbose_name='Order')),
                ('tn_siblings_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks')),
                ('tn_siblings_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Siblings count')),
                ('descripcion', models.TextField()),
                ('descripcion_ingles', models.TextField(blank=True, max_length=500, null=True)),
                ('descripcion_frances', models.TextField(blank=True, max_length=500, null=True)),
                ('descripcion_portugues', models.TextField(blank=True, max_length=500, null=True)),
                ('orden', models.SmallIntegerField(default=0)),
                ('sdmx', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Dimensión',
                'verbose_name_plural': 'Dimensiones',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Fuente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_publicacion', models.TextField()),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('nombre_publicacion_ingles', models.TextField(blank=True, null=True)),
                ('nombre_publicacion_frances', models.TextField(blank=True, null=True)),
                ('nombre_publicacion_portugues', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.TextField()),
                ('nota_ingles', models.TextField(blank=True, null=True)),
                ('nota_frances', models.TextField(blank=True, null=True)),
                ('nota_portugues', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoDimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de dimensión',
                'verbose_name_plural': 'Tipos de dimensiones',
            },
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=100)),
                ('descripcion_ingles', models.TextField(blank=True, null=True)),
                ('descripcion_frances', models.TextField(blank=True, null=True)),
                ('descripcion_portugues', models.TextField(blank=True, null=True)),
                ('definicion', models.TextField(blank=True, null=True)),
                ('definicion_ingles', models.TextField(blank=True, null=True)),
                ('definicion_frances', models.TextField(blank=True, null=True)),
                ('definicion_portugues', models.TextField(blank=True, null=True)),
                ('unidad_de_medida', models.CharField(blank=True, max_length=200, null=True)),
                ('unidad_de_medida_ingles', models.CharField(blank=True, max_length=200, null=True)),
                ('unidad_de_medida_frances', models.CharField(blank=True, max_length=200, null=True)),
                ('unidad_de_medida_portugues', models.CharField(blank=True, max_length=200, null=True)),
                ('orden', models.SmallIntegerField(blank=True, null=True)),
                ('nota', models.TextField(blank=True, null=True)),
                ('nota_ingles', models.TextField(blank=True, null=True)),
                ('nota_frances', models.TextField(blank=True, null=True)),
                ('nota_portugues', models.TextField(blank=True, null=True)),
                ('comentarios', models.TextField(blank=True, null=True)),
                ('metodologia_calculo', models.TextField(blank=True, null=True)),
                ('indicador_listo', models.BooleanField(default=False)),
                ('tipo_dato', models.TextField(blank=True, null=True)),
                ('tipo_dato_ingles', models.TextField(blank=True, null=True)),
                ('tipo_dato_frances', models.TextField(blank=True, null=True)),
                ('tipo_dato_portugues', models.TextField(blank=True, null=True)),
                ('metodologia_calculo_ingles', models.TextField(blank=True, null=True)),
                ('metodologia_calculo_frances', models.TextField(blank=True, null=True)),
                ('metodologia_calculo_portugues', models.TextField(blank=True, null=True)),
                ('comentarios_ingles', models.TextField(blank=True, null=True)),
                ('comentarios_frances', models.TextField(blank=True, null=True)),
                ('comentarios_portugues', models.TextField(blank=True, null=True)),
                ('numero_decimales_consulta', models.IntegerField(blank=True, null=True)),
                ('fecha_ultima_actualizacion_revision', models.DateTimeField(blank=True, null=True)),
                ('actualizado_por', models.CharField(blank=True, max_length=50, null=True)),
                ('revisado_por', models.CharField(blank=True, max_length=50, null=True)),
                ('sdmx', models.TextField(blank=True, null=True)),
                ('publicado', models.BooleanField(default=False)),
                ('areas', models.ManyToManyField(blank=True, related_name='indicadores', to='cepalstat.Area', verbose_name='Area temática')),
                ('dimensiones_asociadas', models.ManyToManyField(blank=True, related_name='indicadores', to='cepalstat.Dimension', verbose_name='Dimensiones')),
            ],
            options={
                'verbose_name': 'Indicador',
                'verbose_name_plural': 'Indicadores',
            },
        ),
        migrations.AddField(
            model_name='dimension',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cepalstat.tipodimension'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='tn_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='cepalstat.dimension', verbose_name='Parent'),
        ),
        migrations.CreateModel(
            name='Dato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(blank=True, decimal_places=22, max_digits=38, null=True)),
                ('valor_cualitativo', models.CharField(blank=True, max_length=20, null=True)),
                ('dimensiones', models.ManyToManyField(to='cepalstat.Dimension', verbose_name='Dimensiones')),
                ('fuente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cepalstat.fuente')),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datos', to='cepalstat.indicador')),
                ('nota', models.ManyToManyField(blank=True, null=True, to='cepalstat.Nota', verbose_name='Notas')),
            ],
        ),
    ]
